name: Build

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.13"
  GTK_ROOT: C:\gtk-build\gtk\x64\release

jobs:
  gtk:
    name: Prepare gtk ${{ matrix.target }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc]
        os: [windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
        with:
          enable-cache: true
          prune-cache: false

      - name: Seed pip
        run: uv venv --seed

      - name: Cache GTK4 Build
        id: cache-gtk
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: C:\gtk-build
          key: gtk-${{ matrix.target }}-${{ github.event.release.tag_name || github.ref_name }}
          
      - name: Build GTK4
        if: steps.cache-gtk.outputs.cache-hit != 'true'
        run: |
          uv run --only-group gtk gvsbuild build --ninja-opts -j2 --enable-gi --py-wheel gtk4 pygobject

      - name: Archive GTK4 runtime
        run: |
          7z a -tzip GTK4_Gvsbuild-${{ matrix.target }}.zip ${env:GTK_ROOT}\*

      - name: Upload GTK4_Gvsbuild-${{ matrix.target }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: GTK4_Gvsbuild-${{ matrix.target }}.zip
          path: GTK4_Gvsbuild-${{ matrix.target }}.zip

  binaries:
    name: Binary ${{ matrix.target }} (${{ matrix.os }})
    needs:
      - gtk
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: powerpc64le-unknown-linux-gnu
            os: ubuntu-latest
          # Windows
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
          # macOS
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
        with:
          enable-cache: true
          prune-cache: false

      - name: Cache GTK4 Build Artifacts (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: C:\gtk-build
          key: gtk-${{ matrix.target }}-${{ github.event.release.tag_name || github.ref_name }}
          fail-on-cache-miss: true

      - name: Install GTK Development Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2-dev \
            libgirepository-2.0-dev
        
      - name: Add GTK4 Environment Paths (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "${env:GTK_ROOT}\lib" | Out-File -FilePath $env:GITHUB_PATH -Append
          echo "${env:GTK_ROOT}\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
          echo "${env:GTK_ROOT}" | Out-File -FilePath $env:GITHUB_PATH -Append
          
      - name: Synchronize Project Dependencies
        run: |
          uv sync --locked --group release --no-default-groups

      - name: Reinstall GTK4 Python Wheels (Windows)
        if: runner.os == 'Windows'
        run: |
          uv pip install --force-reinstall (Resolve-Path ${env:GTK_ROOT}\wheels\PyGObject*.whl)
          uv pip install --force-reinstall (Resolve-Path ${env:GTK_ROOT}\wheels\pycairo*.whl)

      - name: Build binary
        run: |
          uv run scripts/build_binary.py packaging --archive --suffix "${{ matrix.target }}"

      - name: Upload staged archive
        if: runner.os != 'Linux'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: staged-${{ runner.os }}-${{ matrix.target }}
          path: packaging/*
          if-no-files-found: error

      - name: Upload archive
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: standalone-${{ matrix.target }}
          path: packaging/*
          if-no-files-found: error
